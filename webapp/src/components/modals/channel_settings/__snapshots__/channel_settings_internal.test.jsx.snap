// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ChannelSettingsInner should match snapshot 1`] = `
<form
  onSubmit={[Function]}
  role="form"
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "#3d3c40",
        "padding": "2em 2em 3em",
      }
    }
  >
    <div>
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={false}
        label="Project"
        name="projects"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "DKH-Project",
              "value": "DP",
            },
            Object {
              "label": "Issue Dialog Testing",
              "value": "IDT",
            },
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
            Object {
              "label": "LEV-test",
              "value": "LT",
            },
            Object {
              "label": "restricted",
              "value": "RES",
            },
            Object {
              "label": "scrum1",
              "value": "SCRUM1",
            },
            Object {
              "label": "Testing Extensions",
              "value": "EXT",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={
          Array [
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
          ]
        }
      />
      <Loading
        position="relative"
        style={Object {}}
      />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <FormButton
      btnClass="btn-link"
      defaultMessage="Cancel"
      disabled={false}
      extraClasses=""
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-danger pull-left"
      defaultMessage="Delete"
      disabled={false}
      extraClasses=""
      id="jira-delete-subscription"
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-primary"
      defaultMessage="Set Subscription"
      disabled={false}
      extraClasses=""
      saving={false}
      savingMessage="Setting"
      type="submit"
    />
  </ModalFooter>
</form>
`;

exports[`components/ChannelSettingsInner should match snapshot after fetching issue metadata 1`] = `
<form
  onSubmit={[Function]}
  role="form"
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "#3d3c40",
        "padding": "2em 2em 3em",
      }
    }
  >
    <div>
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={false}
        label="Project"
        name="projects"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "DKH-Project",
              "value": "DP",
            },
            Object {
              "label": "Issue Dialog Testing",
              "value": "IDT",
            },
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
            Object {
              "label": "LEV-test",
              "value": "LT",
            },
            Object {
              "label": "restricted",
              "value": "RES",
            },
            Object {
              "label": "scrum1",
              "value": "SCRUM1",
            },
            Object {
              "label": "Testing Extensions",
              "value": "EXT",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={
          Array [
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
          ]
        }
      />
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={true}
        label="Events"
        name="events"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Issue Created",
              "value": "event_created",
            },
            Object {
              "label": "Issue Deleted",
              "value": "event_deleted",
            },
            Object {
              "label": "Issue Deleted, Unresolved",
              "value": "event_deleted_unresolved",
            },
            Object {
              "label": "Issue Reopened",
              "value": "event_updated_reopened",
            },
            Object {
              "label": "Issue Resolved",
              "value": "event_updated_resolved",
            },
            Object {
              "label": "Comment Created",
              "value": "event_created_comment",
            },
            Object {
              "label": "Comment Updated",
              "value": "event_updated_comment",
            },
            Object {
              "label": "Comment Deleted",
              "value": "event_deleted_comment",
            },
            Object {
              "label": "Issue Updated: Any",
              "value": "event_updated_any",
            },
            Object {
              "label": "Issue Updated: Assignee",
              "value": "event_updated_assignee",
            },
            Object {
              "label": "Issue Updated: Attachment",
              "value": "event_updated_attachment",
            },
            Object {
              "label": "Issue Updated: Description",
              "value": "event_updated_description",
            },
            Object {
              "label": "Issue Updated: Fix Version",
              "value": "event_updated_fix_version",
            },
            Object {
              "label": "Issue Updated: Issue Type",
              "value": "event_updated_issue_type",
            },
            Object {
              "label": "Issue Updated: Labels",
              "value": "event_updated_labels",
            },
            Object {
              "label": "Issue Updated: Priority",
              "value": "event_updated_priority",
            },
            Object {
              "label": "Issue Updated: Rank",
              "value": "event_updated_rank",
            },
            Object {
              "label": "Issue Updated: Sprint",
              "value": "event_updated_sprint",
            },
            Object {
              "label": "Issue Updated: Status",
              "value": "event_updated_status",
            },
            Object {
              "label": "Issue Updated: Summary",
              "value": "event_updated_summary",
            },
            Object {
              "label": "Issue Updated: Custom - Epic Link",
              "value": "event_updated_customfield_10014",
            },
            Object {
              "label": "Issue Updated: Custom - Epic Name",
              "value": "event_updated_customfield_10011",
            },
            Object {
              "label": "Issue Updated: Custom - Favorite Food",
              "value": "event_updated_customfield_10067",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Checkbox",
              "value": "event_updated_customfield_10068",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Date Picker",
              "value": "event_updated_customfield_10069",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Date Time Picker",
              "value": "event_updated_customfield_10070",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Labels",
              "value": "event_updated_customfield_10071",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Number Field",
              "value": "event_updated_customfield_10072",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Radio Buttons",
              "value": "event_updated_customfield_10073",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Select List 1",
              "value": "event_updated_customfield_10074",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Select List 2",
              "value": "event_updated_customfield_10075",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - Select List 3",
              "value": "event_updated_customfield_10076",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - URL Field",
              "value": "event_updated_customfield_10079",
            },
            Object {
              "label": "Issue Updated: Custom - MJK - User Picker",
              "value": "event_updated_customfield_10080",
            },
            Object {
              "label": "Issue Updated: Custom - Sprint",
              "value": "event_updated_customfield_10021",
            },
            Object {
              "label": "Issue Updated: Custom - Text Field 1",
              "value": "event_updated_customfield_10077",
            },
            Object {
              "label": "Issue Updated: Custom - Text Field 2",
              "value": "event_updated_customfield_10078",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={
          Array [
            Object {
              "label": "Issue Reopened",
              "value": "event_updated_reopened",
            },
          ]
        }
      />
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={true}
        label="Issue Type"
        name="issue_types"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Epic",
              "value": "10000",
            },
            Object {
              "label": "Story",
              "value": "10001",
            },
            Object {
              "label": "Task",
              "value": "10002",
            },
            Object {
              "label": "Bug",
              "value": "10004",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={
          Array [
            Object {
              "label": "Story",
              "value": "10001",
            },
          ]
        }
      />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <FormButton
      btnClass="btn-link"
      defaultMessage="Cancel"
      disabled={false}
      extraClasses=""
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-danger pull-left"
      defaultMessage="Delete"
      disabled={false}
      extraClasses=""
      id="jira-delete-subscription"
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-primary"
      defaultMessage="Set Subscription"
      disabled={false}
      extraClasses=""
      saving={false}
      savingMessage="Setting"
      type="submit"
    />
  </ModalFooter>
</form>
`;

exports[`components/ChannelSettingsInner should match snapshot with no filters 1`] = `
<form
  onSubmit={[Function]}
  role="form"
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "#3d3c40",
        "padding": "2em 2em 3em",
      }
    }
  >
    <div>
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={false}
        label="Project"
        name="projects"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "DKH-Project",
              "value": "DP",
            },
            Object {
              "label": "Issue Dialog Testing",
              "value": "IDT",
            },
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
            Object {
              "label": "LEV-test",
              "value": "LT",
            },
            Object {
              "label": "restricted",
              "value": "RES",
            },
            Object {
              "label": "scrum1",
              "value": "SCRUM1",
            },
            Object {
              "label": "Testing Extensions",
              "value": "EXT",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={Array []}
      />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <FormButton
      btnClass="btn-link"
      defaultMessage="Cancel"
      disabled={false}
      extraClasses=""
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-danger pull-left"
      defaultMessage="Delete"
      disabled={false}
      extraClasses=""
      id="jira-delete-subscription"
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-primary"
      defaultMessage="Set Subscription"
      disabled={true}
      extraClasses=""
      saving={false}
      savingMessage="Setting"
      type="submit"
    />
  </ModalFooter>
</form>
`;

exports[`components/ChannelSettingsInner should match snapshot with no issue metadata 1`] = `
<form
  onSubmit={[Function]}
  role="form"
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "#3d3c40",
        "padding": "2em 2em 3em",
      }
    }
  >
    <div>
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={false}
        label="Project"
        name="projects"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "DKH-Project",
              "value": "DP",
            },
            Object {
              "label": "Issue Dialog Testing",
              "value": "IDT",
            },
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
            Object {
              "label": "LEV-test",
              "value": "LT",
            },
            Object {
              "label": "restricted",
              "value": "RES",
            },
            Object {
              "label": "scrum1",
              "value": "SCRUM1",
            },
            Object {
              "label": "Testing Extensions",
              "value": "EXT",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={
          Array [
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
          ]
        }
      />
      <Loading
        position="relative"
        style={Object {}}
      />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <FormButton
      btnClass="btn-link"
      defaultMessage="Cancel"
      disabled={false}
      extraClasses=""
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-danger pull-left"
      defaultMessage="Delete"
      disabled={false}
      extraClasses=""
      id="jira-delete-subscription"
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-primary"
      defaultMessage="Set Subscription"
      disabled={false}
      extraClasses=""
      saving={false}
      savingMessage="Setting"
      type="submit"
    />
  </ModalFooter>
</form>
`;

exports[`components/ChannelSettingsInner should match snapshot with no subscriptions 1`] = `
<form
  onSubmit={[Function]}
  role="form"
>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "color": "#3d3c40",
        "padding": "2em 2em 3em",
      }
    }
  >
    <div>
      <ReactSelectSetting
        addValidate={[Function]}
        isMulti={false}
        label="Project"
        name="projects"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "DKH-Project",
              "value": "DP",
            },
            Object {
              "label": "Issue Dialog Testing",
              "value": "IDT",
            },
            Object {
              "label": "Koch Testing",
              "value": "KT",
            },
            Object {
              "label": "LEV-test",
              "value": "LT",
            },
            Object {
              "label": "restricted",
              "value": "RES",
            },
            Object {
              "label": "scrum1",
              "value": "SCRUM1",
            },
            Object {
              "label": "Testing Extensions",
              "value": "EXT",
            },
          ]
        }
        removeValidate={[Function]}
        required={true}
        theme={
          Object {
            "awayIndicator": "#ffbc42",
            "buttonBg": "#166de0",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3d3c40",
            "codeTheme": "github",
            "dndIndicator": "#f74343",
            "errorTextColor": "#fd5960",
            "linkColor": "#2389d7",
            "mentionBj": "#ffffff",
            "mentionColor": "#145dbf",
            "mentionHighlightBg": "#ffe577",
            "mentionHighlightLink": "#166de0",
            "newMessageSeparator": "#ff8800",
            "onlineIndicator": "#06d6a0",
            "sidebarBg": "#145dbf",
            "sidebarHeaderBg": "#1153ab",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#579eff",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#4578bf",
            "sidebarUnreadText": "#ffffff",
            "type": "Mattermost",
          }
        }
        value={Array []}
      />
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <FormButton
      btnClass="btn-link"
      defaultMessage="Cancel"
      disabled={false}
      extraClasses=""
      onClick={[Function]}
      savingMessage="Creating"
      type="button"
    />
    <FormButton
      btnClass="btn-primary"
      defaultMessage="Set Subscription"
      disabled={true}
      extraClasses=""
      saving={false}
      savingMessage="Setting"
      type="submit"
    />
  </ModalFooter>
</form>
`;
