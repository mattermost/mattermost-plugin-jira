// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/CreateIssue should match snapshot 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <div>
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          key="LT"
          label="Project"
          limitOptions={true}
          name="project"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "DKH-Project",
                "value": "DP",
              },
              Object {
                "label": "Issue Dialog Testing",
                "value": "IDT",
              },
              Object {
                "label": "Koch Testing",
                "value": "KT",
              },
              Object {
                "label": "LEV-test",
                "value": "LT",
              },
              Object {
                "label": "restricted",
                "value": "RES",
              },
              Object {
                "label": "scrum1",
                "value": "SCRUM1",
              },
              Object {
                "label": "Testing Extensions",
                "value": "EXT",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
        />
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          label="Issue Type"
          name="issue_type"
          onChange={[Function]}
          options={Array []}
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
        />
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with error 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <div>
        <p
          className="alert alert-danger"
        >
          <i
            className="fa fa-warning"
            title="Warning Icon"
          />
          <span>
             
            Some error
          </span>
        </p>
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          key="LT"
          label="Project"
          limitOptions={true}
          name="project"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "DKH-Project",
                "value": "DP",
              },
              Object {
                "label": "Issue Dialog Testing",
                "value": "IDT",
              },
              Object {
                "label": "Koch Testing",
                "value": "KT",
              },
              Object {
                "label": "LEV-test",
                "value": "LT",
              },
              Object {
                "label": "restricted",
                "value": "RES",
              },
              Object {
                "label": "scrum1",
                "value": "SCRUM1",
              },
              Object {
                "label": "Testing Extensions",
                "value": "EXT",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "label": "Koch Testing",
              "value": "KT",
            }
          }
        />
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          label="Issue Type"
          name="issue_type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Task",
                "value": "10002",
              },
              Object {
                "label": "Story",
                "value": "10001",
              },
              Object {
                "label": "Bug",
                "value": "10004",
              },
              Object {
                "label": "Epic",
                "value": "10000",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "label": "Story",
              "value": "10001",
            }
          }
        />
        <JiraFields
          addValidate={[Function]}
          allowedFields={
            Array [
              "project",
              "issuetype",
              "priority",
              "description",
              "summary",
            ]
          }
          allowedSchemaCustom={
            Array [
              "com.atlassian.jira.plugin.system.customfieldtypes:textarea",
              "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
              "com.atlassian.jira.plugin.system.customfieldtypes:select",
              "com.atlassian.jira.plugin.system.customfieldtypes:project",
              "com.pyxis.greenhopper.jira:gh-epic-label",
            ]
          }
          fields={
            Object {
              "assignee": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/2/user/assignable/search?project=KT&query=",
                "hasDefaultValue": false,
                "key": "assignee",
                "name": "Assignee",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "system": "assignee",
                  "type": "user",
                },
              },
              "attachment": Object {
                "hasDefaultValue": false,
                "key": "attachment",
                "name": "Attachment",
                "operations": Array [],
                "required": false,
                "schema": Object {
                  "items": "attachment",
                  "system": "attachment",
                  "type": "array",
                },
              },
              "components": Object {
                "allowedValues": Array [],
                "hasDefaultValue": false,
                "key": "components",
                "name": "Components",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "component",
                  "system": "components",
                  "type": "array",
                },
              },
              "customfield_10014": Object {
                "hasDefaultValue": false,
                "key": "customfield_10014",
                "name": "Epic Link",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.pyxis.greenhopper.jira:gh-epic-link",
                  "customId": 10014,
                  "type": "any",
                },
              },
              "customfield_10021": Object {
                "hasDefaultValue": false,
                "key": "customfield_10021",
                "name": "Sprint",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.pyxis.greenhopper.jira:gh-sprint",
                  "customId": 10021,
                  "items": "string",
                  "type": "array",
                },
              },
              "customfield_10067": Object {
                "hasDefaultValue": false,
                "key": "customfield_10067",
                "name": "Favorite Food",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
                  "customId": 10067,
                  "type": "string",
                },
              },
              "customfield_10068": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10033",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10033",
                    "value": "1",
                  },
                  Object {
                    "id": "10034",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10034",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10068",
                "name": "MJK - Checkbox",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes",
                  "customId": 10068,
                  "items": "option",
                  "type": "array",
                },
              },
              "customfield_10069": Object {
                "hasDefaultValue": false,
                "key": "customfield_10069",
                "name": "MJK - Date Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:datepicker",
                  "customId": 10069,
                  "type": "date",
                },
              },
              "customfield_10070": Object {
                "hasDefaultValue": false,
                "key": "customfield_10070",
                "name": "MJK - Date Time Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:datetime",
                  "customId": 10070,
                  "type": "datetime",
                },
              },
              "customfield_10071": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/labels/suggest?customFieldId=10071&query=",
                "hasDefaultValue": false,
                "key": "customfield_10071",
                "name": "MJK - Labels",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
                  "customId": 10071,
                  "items": "string",
                  "type": "array",
                },
              },
              "customfield_10072": Object {
                "hasDefaultValue": false,
                "key": "customfield_10072",
                "name": "MJK - Number Field",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:float",
                  "customId": 10072,
                  "type": "number",
                },
              },
              "customfield_10073": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10035",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10035",
                    "value": "1",
                  },
                  Object {
                    "id": "10036",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10036",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10073",
                "name": "MJK - Radio Buttons",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons",
                  "customId": 10073,
                  "type": "option",
                },
              },
              "customfield_10074": Object {
                "allowedValues": Array [],
                "hasDefaultValue": false,
                "key": "customfield_10074",
                "name": "MJK - Select List 1",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect",
                  "customId": 10074,
                  "type": "option-with-child",
                },
              },
              "customfield_10075": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10037",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10037",
                    "value": "1",
                  },
                  Object {
                    "id": "10038",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10038",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10075",
                "name": "MJK - Select List 2",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:multiselect",
                  "customId": 10075,
                  "items": "option",
                  "type": "array",
                },
              },
              "customfield_10076": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10039",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10039",
                    "value": "1",
                  },
                  Object {
                    "id": "10040",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10040",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10076",
                "name": "MJK - Select List 3",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:select",
                  "customId": 10076,
                  "type": "option",
                },
              },
              "customfield_10077": Object {
                "hasDefaultValue": false,
                "key": "customfield_10077",
                "name": "Text Field 1",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textarea",
                  "customId": 10077,
                  "type": "string",
                },
              },
              "customfield_10078": Object {
                "hasDefaultValue": false,
                "key": "customfield_10078",
                "name": "Text Field 2",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
                  "customId": 10078,
                  "type": "string",
                },
              },
              "customfield_10079": Object {
                "hasDefaultValue": false,
                "key": "customfield_10079",
                "name": "MJK - URL Field",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:url",
                  "customId": 10079,
                  "type": "string",
                },
              },
              "customfield_10080": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/users/picker?fieldName=customfield_10080&fieldConfigId=10187&projectId=10008&showAvatar=true&query=",
                "hasDefaultValue": false,
                "key": "customfield_10080",
                "name": "MJK - User Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:userpicker",
                  "customId": 10080,
                  "type": "user",
                },
              },
              "description": Object {
                "hasDefaultValue": false,
                "key": "description",
                "name": "Description",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "description",
                  "type": "string",
                },
              },
              "fixVersions": Object {
                "allowedValues": Array [
                  Object {
                    "archived": false,
                    "id": "10000",
                    "name": "d",
                    "projectId": 10008,
                    "released": false,
                    "self": "https://mmtest.atlassian.net/rest/api/2/version/10000",
                  },
                ],
                "hasDefaultValue": false,
                "key": "fixVersions",
                "name": "Fix versions",
                "operations": Array [
                  "set",
                  "add",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "version",
                  "system": "fixVersions",
                  "type": "array",
                },
              },
              "issuelinks": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/2/issue/picker?currentProjectId=&showSubTaskParent=true&showSubTasks=true&currentIssueKey=null&query=",
                "hasDefaultValue": false,
                "key": "issuelinks",
                "name": "Linked Issues",
                "operations": Array [
                  "add",
                ],
                "required": false,
                "schema": Object {
                  "items": "issuelinks",
                  "system": "issuelinks",
                  "type": "array",
                },
              },
              "issuetype": Object {
                "allowedValues": Array [
                  Object {
                    "avatarId": 10315,
                    "description": "Stories track functionality or features expressed as user goals.",
                    "iconUrl": "https://mmtest.atlassian.net/secure/viewavatar?size=medium&avatarId=10315&avatarType=issuetype",
                    "id": "10001",
                    "name": "Story",
                    "self": "https://mmtest.atlassian.net/rest/api/2/issuetype/10001",
                    "subtask": false,
                  },
                ],
                "hasDefaultValue": false,
                "key": "issuetype",
                "name": "Issue Type",
                "operations": Array [],
                "required": true,
                "schema": Object {
                  "system": "issuetype",
                  "type": "issuetype",
                },
              },
              "labels": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/labels/suggest?query=",
                "hasDefaultValue": false,
                "key": "labels",
                "name": "Labels",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "string",
                  "system": "labels",
                  "type": "array",
                },
              },
              "priority": Object {
                "allowedValues": Array [
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/highest.svg",
                    "id": "1",
                    "name": "Highest",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/1",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/high.svg",
                    "id": "2",
                    "name": "High",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/2",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/medium.svg",
                    "id": "3",
                    "name": "Medium",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/3",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/low.svg",
                    "id": "4",
                    "name": "Low",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/4",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/lowest.svg",
                    "id": "5",
                    "name": "Lowest",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/5",
                  },
                ],
                "defaultValue": Object {
                  "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/medium.svg",
                  "id": "3",
                  "name": "Medium",
                  "self": "https://mmtest.atlassian.net/rest/api/2/priority/3",
                },
                "hasDefaultValue": true,
                "key": "priority",
                "name": "Priority",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "priority",
                  "type": "priority",
                },
              },
              "project": Object {
                "allowedValues": Array [
                  Object {
                    "avatarUrls": Object {
                      "16x16": "https://mmtest.atlassian.net/secure/projectavatar?size=xsmall&s=xsmall&pid=10008&avatarId=10417",
                      "24x24": "https://mmtest.atlassian.net/secure/projectavatar?size=small&s=small&pid=10008&avatarId=10417",
                      "32x32": "https://mmtest.atlassian.net/secure/projectavatar?size=medium&s=medium&pid=10008&avatarId=10417",
                      "48x48": "https://mmtest.atlassian.net/secure/projectavatar?pid=10008&avatarId=10417",
                    },
                    "id": "10008",
                    "key": "KT",
                    "name": "Koch Testing",
                    "projectTypeKey": "software",
                    "self": "https://mmtest.atlassian.net/rest/api/2/project/10008",
                    "simplified": false,
                  },
                ],
                "hasDefaultValue": false,
                "key": "project",
                "name": "Project",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "project",
                  "type": "project",
                },
              },
              "summary": Object {
                "hasDefaultValue": false,
                "key": "summary",
                "name": "Summary",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "summary",
                  "type": "string",
                },
              },
            }
          }
          onChange={[Function]}
          removeValidate={[Function]}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "description": "some description",
              "issuetype": Object {
                "id": "10001",
              },
              "priority": Object {
                "id": 1,
              },
              "project": Object {
                "key": "KT",
              },
              "summary": "",
            }
          }
          values={
            Object {
              "description": "some description",
              "issuetype": Object {
                "id": "10001",
              },
              "priority": Object {
                "id": 1,
              },
              "project": Object {
                "key": "KT",
              },
              "summary": "",
            }
          }
        />
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with form filled 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <div>
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          key="LT"
          label="Project"
          limitOptions={true}
          name="project"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "DKH-Project",
                "value": "DP",
              },
              Object {
                "label": "Issue Dialog Testing",
                "value": "IDT",
              },
              Object {
                "label": "Koch Testing",
                "value": "KT",
              },
              Object {
                "label": "LEV-test",
                "value": "LT",
              },
              Object {
                "label": "restricted",
                "value": "RES",
              },
              Object {
                "label": "scrum1",
                "value": "SCRUM1",
              },
              Object {
                "label": "Testing Extensions",
                "value": "EXT",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "label": "Koch Testing",
              "value": "KT",
            }
          }
        />
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          label="Issue Type"
          name="issue_type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Task",
                "value": "10002",
              },
              Object {
                "label": "Story",
                "value": "10001",
              },
              Object {
                "label": "Bug",
                "value": "10004",
              },
              Object {
                "label": "Epic",
                "value": "10000",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "label": "Story",
              "value": "10001",
            }
          }
        />
        <JiraFields
          addValidate={[Function]}
          allowedFields={
            Array [
              "project",
              "issuetype",
              "priority",
              "description",
              "summary",
            ]
          }
          allowedSchemaCustom={
            Array [
              "com.atlassian.jira.plugin.system.customfieldtypes:textarea",
              "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
              "com.atlassian.jira.plugin.system.customfieldtypes:select",
              "com.atlassian.jira.plugin.system.customfieldtypes:project",
              "com.pyxis.greenhopper.jira:gh-epic-label",
            ]
          }
          fields={
            Object {
              "assignee": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/2/user/assignable/search?project=KT&query=",
                "hasDefaultValue": false,
                "key": "assignee",
                "name": "Assignee",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "system": "assignee",
                  "type": "user",
                },
              },
              "attachment": Object {
                "hasDefaultValue": false,
                "key": "attachment",
                "name": "Attachment",
                "operations": Array [],
                "required": false,
                "schema": Object {
                  "items": "attachment",
                  "system": "attachment",
                  "type": "array",
                },
              },
              "components": Object {
                "allowedValues": Array [],
                "hasDefaultValue": false,
                "key": "components",
                "name": "Components",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "component",
                  "system": "components",
                  "type": "array",
                },
              },
              "customfield_10014": Object {
                "hasDefaultValue": false,
                "key": "customfield_10014",
                "name": "Epic Link",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.pyxis.greenhopper.jira:gh-epic-link",
                  "customId": 10014,
                  "type": "any",
                },
              },
              "customfield_10021": Object {
                "hasDefaultValue": false,
                "key": "customfield_10021",
                "name": "Sprint",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.pyxis.greenhopper.jira:gh-sprint",
                  "customId": 10021,
                  "items": "string",
                  "type": "array",
                },
              },
              "customfield_10067": Object {
                "hasDefaultValue": false,
                "key": "customfield_10067",
                "name": "Favorite Food",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
                  "customId": 10067,
                  "type": "string",
                },
              },
              "customfield_10068": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10033",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10033",
                    "value": "1",
                  },
                  Object {
                    "id": "10034",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10034",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10068",
                "name": "MJK - Checkbox",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes",
                  "customId": 10068,
                  "items": "option",
                  "type": "array",
                },
              },
              "customfield_10069": Object {
                "hasDefaultValue": false,
                "key": "customfield_10069",
                "name": "MJK - Date Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:datepicker",
                  "customId": 10069,
                  "type": "date",
                },
              },
              "customfield_10070": Object {
                "hasDefaultValue": false,
                "key": "customfield_10070",
                "name": "MJK - Date Time Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:datetime",
                  "customId": 10070,
                  "type": "datetime",
                },
              },
              "customfield_10071": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/labels/suggest?customFieldId=10071&query=",
                "hasDefaultValue": false,
                "key": "customfield_10071",
                "name": "MJK - Labels",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
                  "customId": 10071,
                  "items": "string",
                  "type": "array",
                },
              },
              "customfield_10072": Object {
                "hasDefaultValue": false,
                "key": "customfield_10072",
                "name": "MJK - Number Field",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:float",
                  "customId": 10072,
                  "type": "number",
                },
              },
              "customfield_10073": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10035",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10035",
                    "value": "1",
                  },
                  Object {
                    "id": "10036",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10036",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10073",
                "name": "MJK - Radio Buttons",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons",
                  "customId": 10073,
                  "type": "option",
                },
              },
              "customfield_10074": Object {
                "allowedValues": Array [],
                "hasDefaultValue": false,
                "key": "customfield_10074",
                "name": "MJK - Select List 1",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect",
                  "customId": 10074,
                  "type": "option-with-child",
                },
              },
              "customfield_10075": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10037",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10037",
                    "value": "1",
                  },
                  Object {
                    "id": "10038",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10038",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10075",
                "name": "MJK - Select List 2",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:multiselect",
                  "customId": 10075,
                  "items": "option",
                  "type": "array",
                },
              },
              "customfield_10076": Object {
                "allowedValues": Array [
                  Object {
                    "id": "10039",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10039",
                    "value": "1",
                  },
                  Object {
                    "id": "10040",
                    "self": "https://mmtest.atlassian.net/rest/api/2/customFieldOption/10040",
                    "value": "2",
                  },
                ],
                "hasDefaultValue": false,
                "key": "customfield_10076",
                "name": "MJK - Select List 3",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:select",
                  "customId": 10076,
                  "type": "option",
                },
              },
              "customfield_10077": Object {
                "hasDefaultValue": false,
                "key": "customfield_10077",
                "name": "Text Field 1",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textarea",
                  "customId": 10077,
                  "type": "string",
                },
              },
              "customfield_10078": Object {
                "hasDefaultValue": false,
                "key": "customfield_10078",
                "name": "Text Field 2",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:textfield",
                  "customId": 10078,
                  "type": "string",
                },
              },
              "customfield_10079": Object {
                "hasDefaultValue": false,
                "key": "customfield_10079",
                "name": "MJK - URL Field",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:url",
                  "customId": 10079,
                  "type": "string",
                },
              },
              "customfield_10080": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/users/picker?fieldName=customfield_10080&fieldConfigId=10187&projectId=10008&showAvatar=true&query=",
                "hasDefaultValue": false,
                "key": "customfield_10080",
                "name": "MJK - User Picker",
                "operations": Array [
                  "set",
                ],
                "required": false,
                "schema": Object {
                  "custom": "com.atlassian.jira.plugin.system.customfieldtypes:userpicker",
                  "customId": 10080,
                  "type": "user",
                },
              },
              "description": Object {
                "hasDefaultValue": false,
                "key": "description",
                "name": "Description",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "description",
                  "type": "string",
                },
              },
              "fixVersions": Object {
                "allowedValues": Array [
                  Object {
                    "archived": false,
                    "id": "10000",
                    "name": "d",
                    "projectId": 10008,
                    "released": false,
                    "self": "https://mmtest.atlassian.net/rest/api/2/version/10000",
                  },
                ],
                "hasDefaultValue": false,
                "key": "fixVersions",
                "name": "Fix versions",
                "operations": Array [
                  "set",
                  "add",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "version",
                  "system": "fixVersions",
                  "type": "array",
                },
              },
              "issuelinks": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/2/issue/picker?currentProjectId=&showSubTaskParent=true&showSubTasks=true&currentIssueKey=null&query=",
                "hasDefaultValue": false,
                "key": "issuelinks",
                "name": "Linked Issues",
                "operations": Array [
                  "add",
                ],
                "required": false,
                "schema": Object {
                  "items": "issuelinks",
                  "system": "issuelinks",
                  "type": "array",
                },
              },
              "issuetype": Object {
                "allowedValues": Array [
                  Object {
                    "avatarId": 10315,
                    "description": "Stories track functionality or features expressed as user goals.",
                    "iconUrl": "https://mmtest.atlassian.net/secure/viewavatar?size=medium&avatarId=10315&avatarType=issuetype",
                    "id": "10001",
                    "name": "Story",
                    "self": "https://mmtest.atlassian.net/rest/api/2/issuetype/10001",
                    "subtask": false,
                  },
                ],
                "hasDefaultValue": false,
                "key": "issuetype",
                "name": "Issue Type",
                "operations": Array [],
                "required": true,
                "schema": Object {
                  "system": "issuetype",
                  "type": "issuetype",
                },
              },
              "labels": Object {
                "autoCompleteUrl": "https://mmtest.atlassian.net/rest/api/1.0/labels/suggest?query=",
                "hasDefaultValue": false,
                "key": "labels",
                "name": "Labels",
                "operations": Array [
                  "add",
                  "set",
                  "remove",
                ],
                "required": false,
                "schema": Object {
                  "items": "string",
                  "system": "labels",
                  "type": "array",
                },
              },
              "priority": Object {
                "allowedValues": Array [
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/highest.svg",
                    "id": "1",
                    "name": "Highest",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/1",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/high.svg",
                    "id": "2",
                    "name": "High",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/2",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/medium.svg",
                    "id": "3",
                    "name": "Medium",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/3",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/low.svg",
                    "id": "4",
                    "name": "Low",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/4",
                  },
                  Object {
                    "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/lowest.svg",
                    "id": "5",
                    "name": "Lowest",
                    "self": "https://mmtest.atlassian.net/rest/api/2/priority/5",
                  },
                ],
                "defaultValue": Object {
                  "iconUrl": "https://mmtest.atlassian.net/images/icons/priorities/medium.svg",
                  "id": "3",
                  "name": "Medium",
                  "self": "https://mmtest.atlassian.net/rest/api/2/priority/3",
                },
                "hasDefaultValue": true,
                "key": "priority",
                "name": "Priority",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "priority",
                  "type": "priority",
                },
              },
              "project": Object {
                "allowedValues": Array [
                  Object {
                    "avatarUrls": Object {
                      "16x16": "https://mmtest.atlassian.net/secure/projectavatar?size=xsmall&s=xsmall&pid=10008&avatarId=10417",
                      "24x24": "https://mmtest.atlassian.net/secure/projectavatar?size=small&s=small&pid=10008&avatarId=10417",
                      "32x32": "https://mmtest.atlassian.net/secure/projectavatar?size=medium&s=medium&pid=10008&avatarId=10417",
                      "48x48": "https://mmtest.atlassian.net/secure/projectavatar?pid=10008&avatarId=10417",
                    },
                    "id": "10008",
                    "key": "KT",
                    "name": "Koch Testing",
                    "projectTypeKey": "software",
                    "self": "https://mmtest.atlassian.net/rest/api/2/project/10008",
                    "simplified": false,
                  },
                ],
                "hasDefaultValue": false,
                "key": "project",
                "name": "Project",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "project",
                  "type": "project",
                },
              },
              "summary": Object {
                "hasDefaultValue": false,
                "key": "summary",
                "name": "Summary",
                "operations": Array [
                  "set",
                ],
                "required": true,
                "schema": Object {
                  "system": "summary",
                  "type": "string",
                },
              },
            }
          }
          onChange={[Function]}
          removeValidate={[Function]}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
          value={
            Object {
              "description": "some description",
              "issuetype": Object {
                "id": "10001",
              },
              "priority": Object {
                "id": 1,
              },
              "project": Object {
                "key": "KT",
              },
              "summary": "",
            }
          }
          values={
            Object {
              "description": "some description",
              "issuetype": Object {
                "id": "10001",
              },
              "priority": Object {
                "id": 1,
              },
              "project": Object {
                "key": "KT",
              },
              "summary": "",
            }
          }
        />
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with getMetadataError 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <p
        className="alert alert-danger"
      >
        <i
          className="fa fa-warning"
          title="Warning Icon"
        />
        <span>
           
          Some error
        </span>
      </p>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Close"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="submit"
      />
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with no issue metadata 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <div>
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          key="LT"
          label="Project"
          limitOptions={true}
          name="project"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "DKH-Project",
                "value": "DP",
              },
              Object {
                "label": "Issue Dialog Testing",
                "value": "IDT",
              },
              Object {
                "label": "Koch Testing",
                "value": "KT",
              },
              Object {
                "label": "LEV-test",
                "value": "LT",
              },
              Object {
                "label": "restricted",
                "value": "RES",
              },
              Object {
                "label": "scrum1",
                "value": "SCRUM1",
              },
              Object {
                "label": "Testing Extensions",
                "value": "EXT",
              },
            ]
          }
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
        />
        <ReactSelectSetting
          addValidate={[Function]}
          isMulti={false}
          label="Issue Type"
          name="issue_type"
          onChange={[Function]}
          options={Array []}
          removeValidate={[Function]}
          required={true}
          theme={
            Object {
              "awayIndicator": "#ffbc42",
              "buttonBg": "#166de0",
              "buttonColor": "#ffffff",
              "centerChannelBg": "#ffffff",
              "centerChannelColor": "#3d3c40",
              "codeTheme": "github",
              "dndIndicator": "#f74343",
              "errorTextColor": "#fd5960",
              "linkColor": "#2389d7",
              "mentionBj": "#ffffff",
              "mentionColor": "#145dbf",
              "mentionHighlightBg": "#ffe577",
              "mentionHighlightLink": "#166de0",
              "newMessageSeparator": "#ff8800",
              "onlineIndicator": "#06d6a0",
              "sidebarBg": "#145dbf",
              "sidebarHeaderBg": "#1153ab",
              "sidebarHeaderTextColor": "#ffffff",
              "sidebarText": "#ffffff",
              "sidebarTextActiveBorder": "#579eff",
              "sidebarTextActiveColor": "#ffffff",
              "sidebarTextHoverBg": "#4578bf",
              "sidebarUnreadText": "#ffffff",
              "type": "Mattermost",
            }
          }
        />
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with no project or issue metadata 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <Loading
        position="relative"
        style={Object {}}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/CreateIssue should match snapshot with no project or issue metadata 2`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="large"
  dialogClassName="modal--scroll"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[Function]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Create Jira Issue
    </ModalTitle>
  </ModalHeader>
  <form
    onSubmit={[Function]}
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
      style={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#3d3c40",
          "padding": "2em 2em 3em",
        }
      }
    >
      <Loading
        position="relative"
        style={Object {}}
      />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <FormButton
        btnClass="btn-link"
        defaultMessage="Cancel"
        disabled={false}
        extraClasses=""
        onClick={[Function]}
        savingMessage="Creating"
        type="button"
      />
      <FormButton
        btnClass="btn btn-primary"
        defaultMessage="Create"
        disabled={false}
        extraClasses=""
        id="submit-button"
        saving={false}
        savingMessage="Creating"
        type="submit"
      >
        Create
      </FormButton>
    </ModalFooter>
  </form>
</Modal>
`;
